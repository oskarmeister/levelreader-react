{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\levelreader-react\\\\src\\\\components\\\\WordBankView.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport AppContext from '../context/AppContext';\nimport { StorageManager } from '../storageManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordBankView = () => {\n  _s();\n  const {\n    state,\n    setState\n  } = useContext(AppContext);\n  const buttons = ['all', '1', '2', '3', 'known'];\n  const handleFilter = val => {\n    setState(prev => ({\n      ...prev,\n      filterValue: val\n    }));\n  };\n  const populateWordBank = () => {\n    return Object.entries(state.wordMetadata).sort((a, b) => a[0].localeCompare(b[0])).map(([word, m]) => {\n      if (state.filterValue !== 'all' && m.fam !== state.filterValue) return null;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center bg-white border rounded p-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold flex-1\",\n          children: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flex-1 text-gray-800\",\n          children: m.translation || 'No translation'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-1\",\n          children: ['0', '1', '2', '3', 'known'].map(val => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `w-9 h-9 rounded-full ${val === '0' && (state.deletedWords.includes(word) ? 'bg-red-500 text-white' : 'bg-gray-300')} ${val !== '0' && m.fam === val ? 'bg-primary text-white' : ''}`,\n            onClick: async () => {\n              if (val === '0') {\n                if (!state.deletedWords.includes(word)) {\n                  setState(prev => ({\n                    ...prev,\n                    deletedWords: [...prev.deletedWords, word]\n                  }));\n                  delete state.wordMetadata[word];\n                }\n              } else {\n                setState(prev => ({\n                  ...prev,\n                  deletedWords: prev.deletedWords.filter(w => w !== word),\n                  wordMetadata: {\n                    ...prev.wordMetadata,\n                    [word]: {\n                      translation: m.translation,\n                      fam: val\n                    }\n                  }\n                }));\n              }\n              await StorageManager.save(state);\n            },\n            children: val === '0' ? 'üóëÔ∏è' : val === 'known' ? '‚úì' : val\n          }, val, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, word, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"\\uD83D\\uDD24 Word Bank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container mb-4 text-right\",\n      children: [\"Filter:\", buttons.map(btn => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `ml-2 px-3 py-1 rounded ${state.filterValue === btn ? 'bg-primary text-white' : 'bg-gray-200'}`,\n        onClick: () => handleFilter(btn),\n        children: btn === 'known' ? '‚úì' : btn\n      }, btn, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-none p-0\",\n      children: populateWordBank()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(WordBankView, \"HQOEX8LuP3Imca7Htmd/Ve9zFgo=\");\n_c = WordBankView;\nexport default WordBankView;\nvar _c;\n$RefreshReg$(_c, \"WordBankView\");","map":{"version":3,"names":["React","useContext","AppContext","StorageManager","jsxDEV","_jsxDEV","WordBankView","_s","state","setState","buttons","handleFilter","val","prev","filterValue","populateWordBank","Object","entries","wordMetadata","sort","a","b","localeCompare","map","word","m","fam","className","children","fileName","_jsxFileName","lineNumber","columnNumber","translation","deletedWords","includes","onClick","filter","w","save","btn","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/levelreader-react/src/components/WordBankView.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport AppContext from '../context/AppContext';\r\nimport { StorageManager } from '../storageManager';\r\n\r\nconst WordBankView = () => {\r\n  const { state, setState } = useContext(AppContext);\r\n\r\n  const buttons = ['all', '1', '2', '3', 'known'];\r\n\r\n  const handleFilter = (val) => {\r\n    setState(prev => ({ ...prev, filterValue: val }));\r\n  };\r\n\r\n  const populateWordBank = () => {\r\n    return Object.entries(state.wordMetadata).sort((a, b) => a[0].localeCompare(b[0])).map(([word, m]) => {\r\n      if (state.filterValue !== 'all' && m.fam !== state.filterValue) return null;\r\n      return (\r\n        <li key={word} className=\"flex items-center bg-white border rounded p-2 mb-2\">\r\n          <span className=\"font-bold flex-1\">{word}</span>\r\n          <span className=\"flex-1 text-gray-800\">{m.translation || 'No translation'}</span>\r\n          <div className=\"flex gap-1\">\r\n            {['0', '1', '2', '3', 'known'].map(val => (\r\n              <button\r\n                key={val}\r\n                className={`w-9 h-9 rounded-full ${val === '0' && (state.deletedWords.includes(word) ? 'bg-red-500 text-white' : 'bg-gray-300')} ${(val !== '0' && m.fam === val) ? 'bg-primary text-white' : ''}`}\r\n                onClick={async () => {\r\n                  if (val === '0') {\r\n                    if (!state.deletedWords.includes(word)) {\r\n                      setState(prev => ({ ...prev, deletedWords: [...prev.deletedWords, word] }));\r\n                      delete state.wordMetadata[word];\r\n                    }\r\n                  } else {\r\n                    setState(prev => ({\r\n                      ...prev,\r\n                      deletedWords: prev.deletedWords.filter(w => w !== word),\r\n                      wordMetadata: { ...prev.wordMetadata, [word]: { translation: m.translation, fam: val } }\r\n                    }));\r\n                  }\r\n                  await StorageManager.save(state);\r\n                }}\r\n              >\r\n                {val === '0' ? 'üóëÔ∏è' : val === 'known' ? '‚úì' : val}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">üî§ Word Bank</h2>\r\n      <div className=\"filter-container mb-4 text-right\">\r\n        Filter:\r\n        {buttons.map(btn => (\r\n          <button key={btn} className={`ml-2 px-3 py-1 rounded ${state.filterValue === btn ? 'bg-primary text-white' : 'bg-gray-200'}`} onClick={() => handleFilter(btn)}>\r\n            {btn === 'known' ? '‚úì' : btn}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <ul className=\"list-none p-0\">{populateWordBank()}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordBankView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}